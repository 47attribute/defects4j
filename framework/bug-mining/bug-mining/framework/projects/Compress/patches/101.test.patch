diff --git a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
index 04a3711d..757f3eba 100644
--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java
@@ -18,7 +18,6 @@
 
 package org.apache.commons.compress.archivers.tar;
 
-import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
@@ -27,7 +26,6 @@ import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.InputStream;
 import java.io.IOException;
 import java.net.URI;
 import java.net.URL;
@@ -166,23 +164,6 @@ public class TarArchiveInputStreamTest {
         tis.close();
     }
 
-    @Test
-    public void shouldConsumeArchiveCompletely() throws Exception {
-        InputStream is = TarArchiveInputStreamTest.class
-            .getResourceAsStream("/archive_with_trailer.tar");
-        TarArchiveInputStream tar = new TarArchiveInputStream(is);
-        while (tar.getNextTarEntry() != null) {
-            // just consume the archive
-            ;
-        }
-        byte[] expected = new byte[] {
-            'H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd', '!', '\n'
-        };
-        byte[] actual = new byte[expected.length];
-        is.read(actual);
-        assertArrayEquals(expected, actual);
-    }
-
     private TarArchiveInputStream getTestStream(String name) {
         return new TarArchiveInputStream(
                 TarArchiveInputStreamTest.class.getResourceAsStream(name));
