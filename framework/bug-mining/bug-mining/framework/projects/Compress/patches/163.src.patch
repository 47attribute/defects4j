diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
index ecd364de..077720a7 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
@@ -24,7 +24,6 @@ import java.io.OutputStream;
 import java.io.StringWriter;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import java.util.Date;
 import java.util.HashMap;
 import java.util.Map;
 import org.apache.commons.compress.archivers.ArchiveEntry;
@@ -298,7 +297,7 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
         }
 
         if (paxHeaders.size() > 0) {
-            writePaxHeaders(entry, entryName, paxHeaders);
+            writePaxHeaders(entryName, paxHeaders);
         }
 
         entry.writeEntryHeader(recordBuf, encoding,
@@ -441,8 +440,7 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
      * Writes a PAX extended header with the given map as contents.
      * @since 1.4
      */
-    void writePaxHeaders(TarArchiveEntry entry,
-                         String entryName,
+    void writePaxHeaders(String entryName,
                          Map<String, String> headers) throws IOException {
         String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
         if (name.length() >= TarConstants.NAMELEN) {
@@ -450,7 +448,6 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
         }
         TarArchiveEntry pex = new TarArchiveEntry(name,
                                                   TarConstants.LF_PAX_EXTENDED_HEADER_LC);
-        transferModTime(entry, pex);
 
         StringWriter w = new StringWriter();
         for (Map.Entry<String, String> h : headers.entrySet()) {
@@ -665,7 +662,7 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
                 TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK, linkType);
 
                 longLinkEntry.setSize(len + 1); // +1 for NUL
-                transferModTime(entry, longLinkEntry);
+                longLinkEntry.setModTime(entry.getModTime());
                 putArchiveEntry(longLinkEntry);
                 write(encodedName.array(), encodedName.arrayOffset(), len);
                 write(0); // NUL terminator
@@ -678,13 +675,4 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
         }
         return false;
     }
-
-    private void transferModTime(TarArchiveEntry from, TarArchiveEntry to) {
-        Date fromModTime = from.getModTime();
-        long fromModTimeSeconds = fromModTime.getTime() / 1000;
-        if (fromModTimeSeconds < 0 || fromModTimeSeconds > TarConstants.MAXSIZE) {
-            fromModTime = new Date(0);
-        }
-        to.setModTime(fromModTime);
-    }
 }
