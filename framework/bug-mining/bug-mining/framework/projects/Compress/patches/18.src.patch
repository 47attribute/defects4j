diff --git a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
index abeb4e2f..f22cdda5 100644
--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
@@ -82,7 +82,8 @@ public class ArArchiveInputStream extends ArchiveInputStream {
         }
 
         if (offset == 0) {
-            final byte[] expected = ArchiveUtils.toAsciiBytes(ArArchiveEntry.HEADER);
+            final byte[] expected = ArchiveUtils
+                    .toAsciiBytes(ArArchiveEntry.HEADER);
             final byte[] realized = new byte[expected.length];
             final int read = read(realized);
             if (read != expected.length) {
@@ -91,7 +92,8 @@ public class ArArchiveInputStream extends ArchiveInputStream {
             }
             for (int i = 0; i < expected.length; i++) {
                 if (expected[i] != realized[i]) {
-                    throw new IOException("invalid header " + ArchiveUtils.toAsciiString(realized));
+                    throw new IOException("invalid header "
+                            + ArchiveUtils.toAsciiString(realized));
                 }
             }
         }
@@ -122,7 +124,8 @@ public class ArArchiveInputStream extends ArchiveInputStream {
         read(length);
 
         {
-            final byte[] expected = ArchiveUtils.toAsciiBytes(ArArchiveEntry.TRAILER);
+            final byte[] expected = ArchiveUtils
+                    .toAsciiBytes(ArArchiveEntry.TRAILER);
             final byte[] realized = new byte[expected.length];
             final int read = read(realized);
             if (read != expected.length) {
@@ -142,14 +145,14 @@ public class ArArchiveInputStream extends ArchiveInputStream {
         entryOffset = offset;
 
         // SVR4/GNU adds a trailing "/" to names
-        // entry name is stored as ASCII string
-        String temp = ArchiveUtils.toAsciiString(name).trim();
+        String temp = new String(name).trim(); // TODO is it correct to use the
+        // default charset here?
         if (temp.endsWith("/")) {
             temp = temp.substring(0, temp.length() - 1);
         }
-        currentEntry = new ArArchiveEntry(temp, 
-                                          Long.parseLong(
-                                                  new String(length).trim()));
+        currentEntry = new ArArchiveEntry(temp, // TODO is it correct to use the
+                // default charset here?
+                Long.parseLong(new String(length).trim()));
         return currentEntry;
     }
 
