diff --git a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
index a26fac8c..034fbfc2 100644
--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
@@ -321,8 +321,8 @@ public class BZip2CompressorOutputStream extends CompressorOutputStream
     private Data data;
     private BlockSort blockSorter;
 
+    private final Object outLock = new Object();
     private OutputStream out;
-    private volatile boolean closed;
 
     /**
      * Chooses a blocksize based on the given length of the data to compress.
@@ -393,7 +393,7 @@ public class BZip2CompressorOutputStream extends CompressorOutputStream
 
     @Override
     public void write(final int b) throws IOException {
-        if (!closed) {
+        if (this.out != null) {
             write0(b);
         } else {
             throw new IOException("closed");
@@ -468,38 +468,37 @@ public class BZip2CompressorOutputStream extends CompressorOutputStream
     }
 
     /**
-     * Overriden to warn about an unclosed stream.
+     * Overriden to close the stream.
      */
     @Override
     protected void finalize() throws Throwable {
-        if (!closed) {
-            System.err.println("Unclosed BZip2CompressorOutputStream detected, will *not* close it");
-        }
+        finish();
         super.finalize();
     }
 
 
     public void finish() throws IOException {
-        if (!closed) {
-            closed = true;
-            try {
-                if (this.runLength > 0) {
-                    writeRun();
+        synchronized(outLock) {
+            if (out != null) {
+                try {
+                    if (this.runLength > 0) {
+                        writeRun();
+                    }
+                    this.currentChar = -1;
+                    endBlock();
+                    endCompression();
+                } finally {
+                    this.out = null;
                 }
-                this.currentChar = -1;
-                endBlock();
-                endCompression();
-            } finally {
-                this.out = null;
-                this.blockSorter = null;
-                this.data = null;
             }
         }
+        this.blockSorter = null;
+        this.data = null;
     }
 
     @Override
     public void close() throws IOException {
-        if (!closed) {
+        if (out != null) {
             final OutputStream outShadow = this.out;
             finish();
             outShadow.close();
@@ -629,7 +628,7 @@ public class BZip2CompressorOutputStream extends CompressorOutputStream
                                                 + len + ") > buf.length("
                                                 + buf.length + ").");
         }
-        if (closed) {
+        if (this.out == null) {
             throw new IOException("stream closed");
         }
 
