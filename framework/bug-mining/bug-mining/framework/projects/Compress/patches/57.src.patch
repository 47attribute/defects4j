diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
index 7e87827f..bdf930b5 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
@@ -68,8 +68,8 @@ public class ZipArchiveInputStream extends ArchiveInputStream {
     private ZipArchiveEntry current = null;
     private boolean closed = false;
     private boolean hitCentralDirectory = false;
-    private int offsetInBuffer = 0;
-    private long readBytesOfEntry = 0, bytesReadFromStream = 0;
+    private int readBytesOfEntry = 0, offsetInBuffer = 0;
+    private int bytesReadFromStream = 0;
     private int lengthOfLastRead = 0;
     private boolean hasDataDescriptor = false;
     private ByteArrayInputStream lastStoredEntry = null;
@@ -256,7 +256,7 @@ public class ZipArchiveInputStream extends ArchiveInputStream {
                     return lastStoredEntry.read(buffer, start, length);
                 }
 
-                long csize = current.getSize();
+                int csize = (int) current.getSize();
                 if (readBytesOfEntry >= csize) {
                     return -1;
                 }
@@ -272,8 +272,7 @@ public class ZipArchiveInputStream extends ArchiveInputStream {
                     ? lengthOfLastRead - offsetInBuffer
                     : length;
                 if ((csize - readBytesOfEntry) < toRead) {
-                    // if it is smaller than toRead then it fits into an int
-                    toRead = (int) (csize - readBytesOfEntry);
+                    toRead = csize - readBytesOfEntry;
                 }
                 System.arraycopy(buf, offsetInBuffer, buffer, start, toRead);
                 offsetInBuffer += toRead;
@@ -418,19 +417,16 @@ public class ZipArchiveInputStream extends ArchiveInputStream {
         } else {
             skip(Long.MAX_VALUE);
 
-            long inB;
+            int inB;
             if (current.getMethod() == ZipArchiveOutputStream.DEFLATED) {
                 inB = inf.getTotalIn();
             } else {
                 inB = readBytesOfEntry;
             }
-
-            // this is at most a single read() operation and can't
-            // exceed the range of int
-            int diff = (int) (bytesReadFromStream - inB);
+            int diff = 0;
 
             // Pushback any required bytes
-            if (diff > 0) {
+            if ((diff = bytesReadFromStream - inB) != 0) {
                 ((PushbackInputStream) in).unread(
                         buf,  lengthOfLastRead - diff, diff);
                 pushedBackBytes(diff);
@@ -442,8 +438,8 @@ public class ZipArchiveInputStream extends ArchiveInputStream {
         }
 
         inf.reset();
-        readBytesOfEntry = bytesReadFromStream = 0L;
-        offsetInBuffer = lengthOfLastRead = 0;
+        readBytesOfEntry = offsetInBuffer = bytesReadFromStream =
+            lengthOfLastRead = 0;
         crc.reset();
         current = null;
         lastStoredEntry = null;
