diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index a9f2dbdc..0a383367 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -354,7 +354,7 @@ public class TarUtils {
         while (b.limit() > length && len > 0) {
             b = encoding.encode(name.substring(0, --len));
         }
-        final int limit = b.limit() - b.position();
+        final int limit = b.limit();
         System.arraycopy(b.array(), b.arrayOffset(), buf, offset, limit);
 
         // Pad any remaining output bytes with NUL
diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
index f251c438..06bcf6a3 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
@@ -936,8 +936,7 @@ public class ZipArchiveOutputStream extends ArchiveOutputStream {
         written += SHORT;
 
         // file name
-        writeOut(name.array(), name.arrayOffset(),
-                 name.limit() - name.position());
+        writeOut(name.array(), name.arrayOffset(), name.limit());
         written += name.limit();
 
         // extra field
@@ -960,8 +959,7 @@ public class ZipArchiveOutputStream extends ArchiveOutputStream {
             ze.addExtraField(new UnicodePathExtraField(ze.getName(),
                                                        name.array(),
                                                        name.arrayOffset(),
-                                                       name.limit()
-                                                       - name.position()));
+                                                       name.limit()));
         }
 
         String comm = ze.getComment();
@@ -975,8 +973,7 @@ public class ZipArchiveOutputStream extends ArchiveOutputStream {
                 ze.addExtraField(new UnicodeCommentExtraField(comm,
                                                               commentB.array(),
                                                               commentB.arrayOffset(),
-                                                              commentB.limit()
-                                                              - commentB.position())
+                                                              commentB.limit())
                                  );
             }
         }
@@ -1110,8 +1107,7 @@ public class ZipArchiveOutputStream extends ArchiveOutputStream {
         written += WORD;
 
         // file name
-        writeOut(name.array(), name.arrayOffset(),
-                 name.limit() - name.position());
+        writeOut(name.array(), name.arrayOffset(), name.limit());
         written += name.limit();
 
         // extra field
@@ -1119,8 +1115,7 @@ public class ZipArchiveOutputStream extends ArchiveOutputStream {
         written += extra.length;
 
         // file comment
-        writeOut(commentB.array(), commentB.arrayOffset(),
-                 commentB.limit() - commentB.position());
+        writeOut(commentB.array(), commentB.arrayOffset(), commentB.limit());
         written += commentB.limit();
     }
 
@@ -1186,8 +1181,7 @@ public class ZipArchiveOutputStream extends ArchiveOutputStream {
         // ZIP file comment
         ByteBuffer data = this.zipEncoding.encode(comment);
         writeOut(ZipShort.getBytes(data.limit()));
-        writeOut(data.array(), data.arrayOffset(),
-                 data.limit() - data.position());
+        writeOut(data.array(), data.arrayOffset(), data.limit());
     }
 
     private static final byte[] ONE = ZipLong.getBytes(1L);
