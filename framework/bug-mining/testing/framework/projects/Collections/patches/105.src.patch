diff --git a/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java b/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java
index c01b8474..9f1ee932 100644
--- a/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java
+++ b/src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java
@@ -240,12 +240,8 @@ public class ListOrderedMap<K, V>
      *
      * @param index the index in the Map to start at.
      * @param map the Map containing the entries to be added.
-     * @throws IndexOutOfBoundsException if the index is out of range [0, size]
      */
     public void putAll(int index, final Map<? extends K, ? extends V> map) {
-        if (index < 0 || index > insertOrder.size()) {
-            throw new IndexOutOfBoundsException("Index: " + index + ", Size: " + insertOrder.size());
-        }
         for (final Map.Entry<? extends K, ? extends V> entry : map.entrySet()) {
             final K key = entry.getKey();
             final boolean contains = containsKey(key);
@@ -441,14 +437,10 @@ public class ListOrderedMap<K, V>
      * @param key  the key
      * @param value  the value
      * @return the value previously mapped to the key
-     * @throws IndexOutOfBoundsException if the index is out of range [0, size]
+     * @throws IndexOutOfBoundsException if the index is out of range
      * @since 3.2
      */
     public V put(int index, final K key, final V value) {
-        if (index < 0 || index > insertOrder.size()) {
-            throw new IndexOutOfBoundsException("Index: " + index + ", Size: " + insertOrder.size());
-        }
-
         final Map<K, V> m = decorated();
         if (m.containsKey(key)) {
             final V result = m.remove(key);
