diff --git a/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java b/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java
index 49084a91..a43e8240 100644
--- a/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java
+++ b/src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java
@@ -29,7 +29,6 @@ import java.util.Set;
 import org.apache.commons.collections4.AbstractObjectTest;
 import org.apache.commons.collections4.Bag;
 import org.apache.commons.collections4.BulkTest;
-import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.collections4.MapIterator;
 import org.apache.commons.collections4.MultiValuedMap;
 import org.apache.commons.collections4.bag.AbstractBagTest;
@@ -755,7 +754,7 @@ public abstract class AbstractMultiValuedMapTest<K, V> extends AbstractObjectTes
                 (MultiValuedMap<?, ?>) readExternalFormFromDisk(getCanonicalFullCollectionName(map));
         assertEquals("Map is the right size", map.size(), map2.size());
         for (final Object key : map.keySet()) {
-            assertTrue("Map had inequal elements", CollectionUtils.isEqualCollection(map.get(key), map2.get(key)));
+            assertEquals("Map had inequal elements", map.get(key), map2.get(key));
             if (isRemoveSupported()) {
                 map2.remove(key);
             }
@@ -1072,12 +1071,10 @@ public abstract class AbstractMultiValuedMapTest<K, V> extends AbstractObjectTes
             return AbstractMultiValuedMapTest.this.makeObject().asMap();
         }
 
-        @Override
         public Map<K, Collection<V>> makeFullMap() {
             return AbstractMultiValuedMapTest.this.makeFullMap().asMap();
         }
 
-        @Override
         @SuppressWarnings("unchecked")
         public K[] getSampleKeys() {
             K[] samplekeys = AbstractMultiValuedMapTest.this.getSampleKeys();
@@ -1088,7 +1085,6 @@ public abstract class AbstractMultiValuedMapTest<K, V> extends AbstractObjectTes
             return (K[]) finalKeys;
         }
 
-        @Override
         @SuppressWarnings("unchecked")
         public Collection<V>[] getSampleValues() {
             V[] sampleValues = AbstractMultiValuedMapTest.this.getSampleValues();
@@ -1099,7 +1095,6 @@ public abstract class AbstractMultiValuedMapTest<K, V> extends AbstractObjectTes
             return colArr;
         }
 
-        @Override
         @SuppressWarnings("unchecked")
         public Collection<V>[] getNewSampleValues() {
             Object[] sampleValues = { "ein", "ek", "zwei", "duey", "drei", "teen" };
