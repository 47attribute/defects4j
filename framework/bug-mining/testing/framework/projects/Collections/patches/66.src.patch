diff --git a/src/main/java/org/apache/commons/collections/functors/EqualPredicate.java b/src/main/java/org/apache/commons/collections/functors/EqualPredicate.java
index 396bb834..c98b54d9 100644
--- a/src/main/java/org/apache/commons/collections/functors/EqualPredicate.java
+++ b/src/main/java/org/apache/commons/collections/functors/EqualPredicate.java
@@ -35,15 +35,11 @@ public final class EqualPredicate<T> implements Predicate<T>, Serializable {
     private static final long serialVersionUID = 5633766978029907089L;
 
     /** The value to compare to */
-    private final T iValue;
-    
-    /** The equator to use for comparison */
-    private final Equator<T> equator;
+    private final Object iValue;
 
     /**
-     * Factory to create the predicate.
+     * Factory to create the identity predicate.
      * 
-     * @param <T> the type that the predicate queries
      * @param object  the object to compare to
      * @return the predicate
      * @throws IllegalArgumentException if the predicate is null
@@ -56,44 +52,14 @@ public final class EqualPredicate<T> implements Predicate<T>, Serializable {
     }
 
     /**
-     * Factory to create the identity predicate.
-     * 
-     * @param <T> the type that the predicate queries
-     * @param object  the object to compare to
-     * @param equator  the equator to use for comparison
-     * @return the predicate
-     * @throws IllegalArgumentException if the predicate is null
-     * @since 4.0
-     */
-    public static <T> Predicate<T> equalPredicate(T object, Equator<T> equator) {
-        if (object == null) {
-            return nullPredicate();
-        }
-        return new EqualPredicate<T>(object, equator);
-    }
-
-    /**
-     * Constructor that performs no validation.
-     * Use <code>getInstance</code> if you want that.
-     * 
-     * @param object  the object to compare to
-     */
-    public EqualPredicate(T object) {
-        this(object, new DefaultEquator<T>());
-    }
-
-    /**
      * Constructor that performs no validation.
      * Use <code>getInstance</code> if you want that.
      * 
      * @param object  the object to compare to
-     * @param equator  the equator to use for comparison
-     * @since 4.0
      */
-    public EqualPredicate(T object, Equator<T> equator) {
+    public EqualPredicate(Object object) {
         super();
         iValue = object;
-        this.equator = equator;
     }
 
     /**
@@ -102,8 +68,8 @@ public final class EqualPredicate<T> implements Predicate<T>, Serializable {
      * @param object  the input object
      * @return true if input object equals stored value
      */
-    public boolean evaluate(T object) {
-        return equator.equate(iValue, object);
+    public boolean evaluate(Object object) {
+        return (iValue.equals(object));
     }
 
     /**
