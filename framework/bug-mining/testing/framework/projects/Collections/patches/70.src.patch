diff --git a/src/main/java/org/apache/commons/collections/CollectionUtils.java b/src/main/java/org/apache/commons/collections/CollectionUtils.java
index c56c7819..8285c1fe 100644
--- a/src/main/java/org/apache/commons/collections/CollectionUtils.java
+++ b/src/main/java/org/apache/commons/collections/CollectionUtils.java
@@ -610,9 +610,8 @@ public class CollectionUtils {
      * @param predicate
      *            the predicate to use, may be null
      * @param outputCollection
-     *            the collection to output into, may not be null if the inputCollection
-     *            and predicate or not null
-     * @return the outputCollection
+     *            the collection to output into, may not be null
+     * @return outputCollection
      */
     public static <O, R extends Collection<? super O>> R select(Collection<? extends O> inputCollection,
             Predicate<? super O> predicate, R outputCollection) {
@@ -658,8 +657,7 @@ public class CollectionUtils {
      * @param predicate
      *            the predicate to use, may be null
      * @param outputCollection
-     *            the collection to output into, may not be null if the inputCollection
-     *            and predicate or not null
+     *            the collection to output into, may not be null
      * @return outputCollection
      */
     public static <O, R extends Collection<? super O>> R selectRejected(
@@ -728,14 +726,12 @@ public class CollectionUtils {
      *
      * @param inputCollection  the collection to get the input from, may be null
      * @param transformer  the transformer to use, may be null
-     * @param outputCollection  the collection to output into, may not be null if the inputCollection
-     *   and transformer are not null
+     * @param outputCollection  the collection to output into, may not be null
      * @param <I> the type of object in the input collection
      * @param <O> the type of object in the output collection
      * @param <R> the output type of the transformer - this extends O.
      * @return the outputCollection with the transformed input added
-     * @throws NullPointerException if the output collection is null and both, inputCollection and
-     *   transformer are not null
+     * @throws NullPointerException if the output collection is null
      */
     public static <I, O, R extends Collection<? super O>> R collect(Iterable<? extends I> inputCollection,
             final Transformer<? super I, ? extends O> transformer, final R outputCollection) {
@@ -754,14 +750,12 @@ public class CollectionUtils {
      *
      * @param inputIterator  the iterator to get the input from, may be null
      * @param transformer  the transformer to use, may be null
-     * @param outputCollection  the collection to output into, may not be null if the inputCollection
-     *   and transformer are not null
+     * @param outputCollection  the collection to output into, may not be null
      * @param <I> the type of object in the input collection
      * @param <O> the type of object in the output collection
      * @param <R> the output type of the transformer - this extends O.
      * @return the outputCollection with the transformed input added
-     * @throws NullPointerException if the output collection is null and both, inputCollection and
-     *   transformer are not null
+     * @throws NullPointerException if the output collection is null
      */
     //TODO - deprecate and replace with IteratorIterable
     public static <I, O, R extends Collection<? super O>> R collect(Iterator<? extends I> inputIterator,
