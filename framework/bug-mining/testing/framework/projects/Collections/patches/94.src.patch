diff --git a/src/main/java/org/apache/commons/collections4/map/TransformedMap.java b/src/main/java/org/apache/commons/collections4/map/TransformedMap.java
index c1244abc..fd575547 100644
--- a/src/main/java/org/apache/commons/collections4/map/TransformedMap.java
+++ b/src/main/java/org/apache/commons/collections4/map/TransformedMap.java
@@ -40,7 +40,7 @@ import org.apache.commons.collections4.Transformer;
  * <p>
  * This class is Serializable from Commons Collections 3.1.
  * <p>
- * @see org.apache.commons.collections4.splitmap.TransformedSplitMap
+ * @see org.apache.commons.collections4.splitmap.TransformedMap
  *
  * @since 3.0
  * @version $Id$
diff --git a/src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java b/src/main/java/org/apache/commons/collections4/splitmap/TransformedMap.java
similarity index 95%
rename from src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java
rename to src/main/java/org/apache/commons/collections4/splitmap/TransformedMap.java
index 90dfc1e8..8d138443 100644
--- a/src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java
+++ b/src/main/java/org/apache/commons/collections4/splitmap/TransformedMap.java
@@ -58,7 +58,7 @@ import org.apache.commons.collections4.map.LinkedMap;
  * @see org.apache.commons.collections4.SplitMapUtils#readableMap(Get)
  * @see org.apache.commons.collections4.SplitMapUtils#writableMap(Put)
  */
-public class TransformedSplitMap<J, K, U, V> extends AbstractIterableGetMapDecorator<K, V>
+public class TransformedMap<J, K, U, V> extends AbstractIterableGetMapDecorator<K, V>
         implements Put<J, U>, Serializable {
 
     /** Serialization version */
@@ -87,10 +87,10 @@ public class TransformedSplitMap<J, K, U, V> extends AbstractIterableGetMapDecor
      * @return a new transformed map
      * @throws IllegalArgumentException if map is null
      */
-    public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map,
+    public static <J, K, U, V> TransformedMap<J, K, U, V> transformingMap(final Map<K, V> map,
             final Transformer<? super J, ? extends K> keyTransformer,
             final Transformer<? super U, ? extends V> valueTransformer) {
-        return new TransformedSplitMap<J, K, U, V>(map, keyTransformer, valueTransformer);
+        return new TransformedMap<J, K, U, V>(map, keyTransformer, valueTransformer);
     }
 
     //-----------------------------------------------------------------------
@@ -107,7 +107,7 @@ public class TransformedSplitMap<J, K, U, V> extends AbstractIterableGetMapDecor
      * means no conversion
      * @throws IllegalArgumentException if map is null
      */
-    protected TransformedSplitMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer,
+    protected TransformedMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer,
             final Transformer<? super U, ? extends V> valueTransformer) {
         super(map);
         if (keyTransformer == null) {
