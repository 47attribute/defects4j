diff --git a/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java b/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java
index e2f0c14a..1c3496d2 100644
--- a/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java
+++ b/src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java
@@ -45,6 +45,8 @@ public abstract class AbstractCollectionDecorator<E>
     /** Serialization version */
     private static final long serialVersionUID = 6249888059822088500L;
 
+    // TODO privatise field? read-only access - could use decorated() - apart from deserialisation
+
     /** The collection being decorated */
     protected Collection<E> collection;
 
diff --git a/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java b/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java
index f67c4c5f..993c9372 100644
--- a/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java
+++ b/src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java
@@ -41,7 +41,7 @@ import java.util.Set;
 public abstract class AbstractMapDecorator<K, V> extends AbstractIterableMap<K, V> {
 
     /** The map to decorate */
-    protected transient Map<K, V> map;
+    protected transient Map<K, V> map; // TODO Privatise? Only write access is for deserialisation
 
     /**
      * Constructor only used in deserialization, do not use otherwise.
diff --git a/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java b/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java
index c9f4f52a..bf5cc23c 100644
--- a/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java
+++ b/src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java
@@ -34,7 +34,7 @@ import org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter;
 public class AbstractIterableGetMapDecorator<K, V> implements IterableGet<K, V> {
 
     /** The map to decorate */
-    protected transient Map<K, V> map;
+    protected transient Map<K, V> map; // TODO Privatise? only external access is for deserialisation
 
     /**
      * Create a new AbstractSplitMapDecorator.
