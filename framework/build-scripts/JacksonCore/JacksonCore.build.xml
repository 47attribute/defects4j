<project name="Jackson-Core" basedir="${basedir}">

    <property name="compile.debug" value="yes" />

    <!-- script.dir property has to be provided by caller! -->
    <fail message="Property script.dir not set!" unless="script.dir" />

    <property name="junit.jar" value="${script.dir}/build-scripts/lib/junit-4.11.jar"/>

    <!-- Include project build file, which provides general targets -->
    <import file="../project.build.xml"/>

 	<property name="build.home" value="${basedir}" />

	<property name="test.home"	value="${basedir}/src/test"/>
	<property name="source.home" value="${basedir}/src/main"/> 
	<property name="test.target" value="${basedir}/target/test-classes"/>
 	<property name="classes.dir" value="${basedir}/target/classes"/>

	<path id="compile.classpath">
		<pathelement path="${classes.dir}"/>
    </path>

	<path id="test.classpath">
		<pathelement path="${junit.jar}" />
		<pathelement path="${classes.dir}"/>
		<pathelement path="${test.target}"/>		
		<pathelement path="${formatter_cp}"/>
		<pathelement path="${test.home}"/>
	</path>

	<path id="major.classpath">
        <path refid="test.classpath" />
    </path>

	<target name="compile" description="Compile the source code.">
	
      <exec dir="${basedir}" executable="/bin/bash">			
            <arg value="mvn"/>
            <arg line="compile -U"/>
        </exec>  
    </target>
    
    <target name="compile.tests" description="Compile the tests.">
       <exec dir="${basedir}" executable="/bin/bash">
            <arg value="mvn"/>
            <arg line ="test-compile -U"/>
        </exec>
    </target>



<!--
    Run tests
-->
    <target name="test"  depends="compile.tests" description="Run unit tests">
        <junit printsummary="no" haltonfailure="no" haltonerror="no" fork="no" showOutput="true">
            <classpath refid="test.classpath"/>

            <sysproperty key="OUTFILE" value="${OUTFILE}"/>
            <formatter classname="edu.washington.cs.mut.testrunner.Formatter" usefile="false" />
            <test name="${test.entry.class}" methods="${test.entry.method}" if="test.entry.class" />
                <batchtest unless="test.entry.class">
                    <fileset dir="${test.target}" excludes="${exclude.list}">
                        <include name="**/*Test.class"/>
						<exclude name="**/BaseTest.class"/>
						<exclude name="**/TrailingCommasTest.class"/>
						<exclude name="**/failing/**/*.class"/>
						
                    </fileset>
                </batchtest>
        </junit>
    </target>

<!--
    Run individual test and monitor class loader
    Test has to be provided as property "test.entry" (class::method)
    and the output is redirected to "test.output"
-->
    <target name="monitor.test"  description="Run unit test and monitor class loader">
        <java fork="true" classname="edu.washington.cs.mut.testrunner.SingleTestRunner" output="${test.output}"
            failonerror="true">

            <arg value="${test.entry}"/>
            <jvmarg value="-verbose:class"/>
            <classpath refid="test.classpath"/>
            <classpath>
                <pathelement path="${formatter_cp}" />
                <pathelement path="${junit.jar}" />
            </classpath>
        </java>
    </target>
</project>
