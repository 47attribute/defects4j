diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
index 43445e20d..8484caa92 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
@@ -609,7 +609,7 @@ public abstract class BeanDeserializerBase
         if (extTypes != null) {
             // 21-Jun-2016, tatu: related to [databind#999], may need to link type ids too,
             //    so need to pass collected properties
-            _externalTypeIdHandler = extTypes.build(_beanProperties);
+            _externalTypeIdHandler = extTypes.build();
             // we consider this non-standard, to offline handling
             _nonStandardCreation = true;
         }
diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
index 30fb56f78..dd4573ef7 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
@@ -214,11 +214,7 @@ public class ExternalTypeHandler
                 buffer.assignParameter(prop, values[i]);
 
                 // [databind#999] And maybe there's creator property for type id too?
-                SettableBeanProperty typeProp = extProp.getTypeProperty();
                 // for now, should only be needed for creator properties, too
-                if ((typeProp != null) && (typeProp.getCreatorIndex() >= 0)) {
-                    buffer.assignParameter(typeProp, typeId);
-                }
             }
         }
 
@@ -307,21 +303,7 @@ public class ExternalTypeHandler
          *
          * @since 2.8
          */
-        public ExternalTypeHandler build(BeanPropertyMap otherProps) {
             // 21-Jun-2016, tatu: as per [databind#999], may need to link type id property also
-            final int len = _properties.size();
-            ExtTypedProperty[] extProps = new ExtTypedProperty[len];
-            for (int i = 0; i < len; ++i) {
-                ExtTypedProperty extProp = _properties.get(i);
-                String typePropId = extProp.getTypePropertyName();
-                SettableBeanProperty typeProp = otherProps.find(typePropId);
-                if (typeProp != null) {
-                    extProp.linkTypeProperty(typeProp);
-                }
-                extProps[i] = extProp;
-            }
-            return new ExternalTypeHandler(extProps, _nameToPropertyIndex, null, null);
-        }
 
         @Deprecated // since 2.8; may be removed as early as 2.9
         public ExternalTypeHandler build() {
@@ -339,7 +321,6 @@ public class ExternalTypeHandler
         /**
          * @since 2.8
          */
-        private SettableBeanProperty _typeProperty;
 
         public ExtTypedProperty(SettableBeanProperty property, TypeDeserializer typeDeser)
         {
@@ -351,9 +332,6 @@ public class ExternalTypeHandler
         /**
          * @since 2.8
          */
-        public void linkTypeProperty(SettableBeanProperty p) {
-            _typeProperty = p;
-        }
 
         public boolean hasTypePropertyName(String n) {
             return n.equals(_typePropertyName);
@@ -385,8 +363,5 @@ public class ExternalTypeHandler
         /**
          * @since 2.8
          */
-        public SettableBeanProperty getTypeProperty() {
-            return _typeProperty;
-        }
     }
 }
