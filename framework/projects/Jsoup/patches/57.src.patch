diff --git a/java/org/jsoup/helper/HttpConnection.java b/java/org/jsoup/helper/HttpConnection.java
index 8187e0c..dea2ff6 100644
--- a/java/org/jsoup/helper/HttpConnection.java
+++ b/java/org/jsoup/helper/HttpConnection.java
@@ -454,18 +454,6 @@ public class HttpConnection implements Connection {
             contentType = conn.getContentType();
 
             Map<String, List<String>> resHeaders = conn.getHeaderFields();
-            processResponseHeaders(resHeaders);
-
-            // if from a redirect, map previous response cookies into this response
-            if (previousResponse != null) {
-                for (Map.Entry<String, String> prevCookie : previousResponse.cookies().entrySet()) {
-                    if (!hasCookie(prevCookie.getKey()))
-                        cookie(prevCookie.getKey(), prevCookie.getValue());
-                }
-            }
-        }
-
-        void processResponseHeaders(Map<String, List<String>> resHeaders) {
             for (Map.Entry<String, List<String>> entry : resHeaders.entrySet()) {
                 String name = entry.getKey();
                 if (name == null)
@@ -474,17 +462,11 @@ public class HttpConnection implements Connection {
                 List<String> values = entry.getValue();
                 if (name.equalsIgnoreCase("Set-Cookie")) {
                     for (String value : values) {
-                        if (value == null)
-                            continue;
                         TokenQueue cd = new TokenQueue(value);
                         String cookieName = cd.chompTo("=").trim();
                         String cookieVal = cd.consumeTo(";").trim();
-                        if (cookieVal == null)
-                            cookieVal = "";
                         // ignores path, date, domain, secure et al. req'd?
-                        // name not blank, value not null
-                        if (cookieName != null && cookieName.length() > 0)
-                            cookie(cookieName, cookieVal);
+                        cookie(cookieName, cookieVal);
                     }
                 } else { // only take the first instance of each header
                     if (!values.isEmpty())
@@ -493,6 +475,15 @@ public class HttpConnection implements Connection {
             }
         }
 
+            // if from a redirect, map previous response cookies into this response
+            if (previousResponse != null) {
+                for (Map.Entry<String, String> prevCookie : previousResponse.cookies().entrySet()) {
+                    if (!hasCookie(prevCookie.getKey()))
+                        cookie(prevCookie.getKey(), prevCookie.getValue());
+                }
+            }
+        }
+        
         private static void writePost(Collection<Connection.KeyVal> data, OutputStream outputStream) throws IOException {
             OutputStreamWriter w = new OutputStreamWriter(outputStream, DataUtil.defaultCharset);
             boolean first = true;
