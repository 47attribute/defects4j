<project name="commons-lang-major" basedir="${basedir}">

    <property name="compile.debug" value="yes" />

    <!-- script.dir property has to be provided from caller! -->
    <fail message="Property script.dir not set!" unless="script.dir" />

    <property name="junit.jar" value="${script.dir}/projects/lib/junit-4.11.jar"/>
    <property name="easymock.jar" value="${script.dir}/projects/Lang/lib/easymock.jar"/>
    <property name="commons-io.jar" value="${script.dir}/projects/Lang/lib/commons-io.jar"/>
    <property name="cglib.jar" value="${script.dir}/projects/Lang/lib/cglib.jar"/>
    <property name="asm.jar" value="${script.dir}/projects/Lang/lib/asm.jar"/>
    <property name="maven.repo.local" value="${script.dir}/projects/Lang/lib/" />

    <!-- Do not download maven dependencies -->
    <property name="maven.mode.offline" value="true" />

    <!-- Include existing project build file -->
    <import file="${basedir}/build.xml"/>
    <!-- Include project build file, which provides targets to mutate classes
         and run the mutation analysis-->
    <import file="../project.build.xml"/>

    <!-- Directory of the test sources, the default is the directory of the
         existing tests -->
    <property name="bug-db.test.dir" value="${test.home}"/>
    <property name="classes.dir" value="${build.home}/classes"/>

    <!-- Classpath to run mutation analysis -->
    <path id="major.classpath">
        <path refid="test.classpath"/>
        <pathelement path="${cglib.jar}" />
        <pathelement path="${asm.jar}" />
        <pathelement path="${easymock.jar}" />
        <pathelement path="${commons-io.jar}" />
    </path>

    <!-- List of all tests that reliably pass on the fixed version -->
    <fileset id="all.manual.tests" dir="${test.home}" excludes="${exclude.list}">
        <include name="**/*Test.java"/>
        <exclude name="**/*Abstract*Test.java"/>
        <exclude name="**/RandomUtilsTest.java"/>
    </fileset>

<!--
    Run tests
-->
    <target name="test"  depends="compile.tests" description="Run unit tests">
        <junit printsummary="no" haltonfailure="no" haltonerror="no" fork="no" showOutput="true">
            <classpath refid="test.classpath"/>
            <classpath>
                <pathelement path="${formatter_cp}" />
                <pathelement path="${cglib.jar}" />
                <pathelement path="${asm.jar}" />
                <path refid="cobertura.classpath.include" />
            </classpath>

            <sysproperty key="OUTFILE" value="${OUTFILE}"/>
            <formatter classname="edu.washington.cs.mut.testrunner.Formatter" usefile="false" />
            <test name="${test.entry.class}" methods="${test.entry.method}" if="test.entry.class" />
                <batchtest unless="test.entry.class">
                    <fileset refid="all.manual.tests" />
                </batchtest>
        </junit>
        <!-- fail build in case we are running all classes, but there are none in the fileset -->
        <if> <not> <isset property="test.entry.class" /> </not> <then>
            <pathconvert refid="all.manual.tests" property="fileset.notempty" setonempty="false" />
            <fail unless="fileset.notempty" message="Test is running with empty fileset" />
        </then> </if>
    </target>
</project>
