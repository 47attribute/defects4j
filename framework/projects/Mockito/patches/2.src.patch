diff --git a/org/mockito/exceptions/Reporter.java b/org/mockito/exceptions/Reporter.java
index 6e0b3bd..e0b1105 100644
--- a/org/mockito/exceptions/Reporter.java
+++ b/org/mockito/exceptions/Reporter.java
@@ -816,15 +816,6 @@ public class Reporter {
         throw new MockitoException("Mocks instantiated with constructor cannot be combined with " + mode + " serialization mode.");
     }
 
-    public void cannotCreateTimerWithNegativeDurationTime(long durationMillis) {
-        throw new FriendlyReminderException(join("",
-                "Don't panic! I'm just a friendly reminder!",
-                "It is impossible for time to go backward, therefore...",
-                "You cannot put negative value of duration: (" +  durationMillis +  ")",
-                "as argument of timer methods (after(), timeout())",
-                ""));
-    }
-
     private MockName safelyGetMockName(Object mock) {
         return new MockUtil().getMockName(mock);
     }
diff --git a/org/mockito/internal/util/Timer.java b/org/mockito/internal/util/Timer.java
index 907e545..b71e4fd 100644
--- a/org/mockito/internal/util/Timer.java
+++ b/org/mockito/internal/util/Timer.java
@@ -1,14 +1,11 @@
 package org.mockito.internal.util;
 
-import org.mockito.exceptions.Reporter;
-
 public class Timer {
 
     private final long durationMillis;
     private long startTime = -1;
 
     public Timer(long durationMillis) {
-        validateInput(durationMillis);
         this.durationMillis = durationMillis;
     }
 
@@ -26,10 +23,4 @@ public class Timer {
     public void start() {
         startTime = System.currentTimeMillis();
     }
-
-    private void validateInput(long durationMillis) {
-        if (durationMillis < 0) {
-            new Reporter().cannotCreateTimerWithNegativeDurationTime(durationMillis);
-        }
-    }
 }
